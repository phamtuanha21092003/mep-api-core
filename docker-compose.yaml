services:
  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=home
    expose:
      - 5432
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgresql://postgres:123456@db:5432/home?sslmode=disable", "up"]
    links:
      - db
    depends_on:
      - db

  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: ./cmd/server/Dockerfile
    ports:
      - "8080:8080"
    expose:
      - 8080
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8080
      - APP_READ_TIMEOUT=30
      - APP_DEBUG=false
      - APP_ENV=dev
      - DB_URI=postgres://postgres:123456@db:5432/home?sslmode=disable
      - DB_DEBUG=true
      - DB_MAX_OPEN_CONNECTIONS=3
      - DB_MAX_IDLE_CONNECTIONS=1
      - DB_MAX_LIFETIME_CONNECTIONS=10
      - DB_MAX_IDLETIME_CONNECTIONS=10
      - JWT_SECRET_KEY=MzMxMjIxZDIyY2U5ZjhkMzNmZTM4YTlj
      - JWT_REFRESH_TOKEN_SECRET_KEY="gin-project"
      - AUTH_JWT_EXPIRY=1440
      - AUTH_JWT_REFRESH_EXPIRY=43200
    depends_on:
      - db

  minio:
    image: quay.io/minio/minio:RELEASE.2025-01-18T00-31-37Z-cpuv1
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=minio@123456
    volumes:
      - ./data/minio:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    expose:
      - 9000
    command: server /data --console-address ":9001"

  minio-init:
    image: minio/mc:RELEASE.2025-01-17T23-25-50Z
    depends_on:
      - minio
    entrypoint: /bin/bash
    command:
      - -c
      - |
        /usr/bin/mc alias set minio http://minio:9000 admin minio@123456;
        /usr/bin/mc mb minio/my-bucket;
        /usr/bin/mc anonymous set public minio/my-bucket;
        exit 0;

  # run in development comment command statement
  tusd:
    image: tusproject/tusd:sha-5ced87c
    command: >
      -host 0.0.0.0
      -port 8000
      -behind-proxy
      -hooks-http http://gateway:8080/api/v1/hooks/tus
      -s3-bucket my-bucket
      -s3-endpoint http://minio:9000
      -hooks-enabled-events pre-create
      -base-path /api/files
    ports:
      - "8000:8000"
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=minio@123456
      - AWS_REGION=eu-west-1
